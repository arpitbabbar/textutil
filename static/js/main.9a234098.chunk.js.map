{"version":3,"sources":["components/Alert.jsx","components/Navbar.jsx","components/TextForm.jsx","App.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navabr","mode","href","id","onClick","toggleMode","htmlFor","TextForm","useState","text","settext","style","color","heading","backgroundColor","placeholder","value","onChange","event","target","rows","newText","Text","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setmode","setalert","showAlert","message","setTimeout","body","title","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9a234098.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navabr(props) {\r\n    return(\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">About Us</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navabr;\r\n","import React, {useState} from 'react'\r\n\r\nfunction TextForm(props) {\r\n    \r\n    function handleClick(){\r\n        let newText = text.toUpperCase();\r\n        settext(newText);\r\n        props.alert(\"Converted to UpperCase\", \"success\");\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        settext(event.target.value);\r\n    }\r\n\r\n    const handleClick2 = () => {\r\n        let newText = text.toLowerCase();\r\n        settext(newText);\r\n        props.alert(\"Converted to LowerCase\", \"success\");\r\n    }\r\n\r\n    const handleClear = () => {\r\n        let newText = \"\";\r\n        settext(newText);\r\n        props.alert(\"TextArea Cleared\", \"success\");\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var Text = document.getElementById(\"mytext\");\r\n        Text.select();\r\n        navigator.clipboard.writeText(Text.value);\r\n        props.alert(\"Text copied to Clipboard\", \"success\");\r\n    }\r\n \r\n    const handleSpace = () => {\r\n        let newText = text.split(/[  ]+/);\r\n        settext(newText.join(\" \"));\r\n        props.alert(\"Extra Space Removed\", \"success\");\r\n    }\r\n    \r\n    const [text, settext] = useState(\"\");\r\n    \r\n    return(\r\n        <>\r\n     \r\n            <div className=\"mb-3\" style={{color: props.mode===\"dark\"?\"white\":\"#4f3174\"}}>\r\n            <h1 className=\"my-3\">{props.heading}</h1>\r\n            {/* <label for=\"mytext\" className=\"form-label\">Example textarea</label> */}\r\n            <textarea className=\"form-control my-3\" id=\"mytext\" style={{backgroundColor: props.mode===\"dark\"?\"grey\":\"white\",color: props.mode===\"dark\"?\"white\":\"#4f3174\" }} placeholder=\"Enter Text Here\" value={text} onChange={handleChange} rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClick}>Convert To Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClick2}>Convert To Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy To Clipboard</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleSpace}>Remove Extra Spaces</button>\r\n\r\n\r\n\r\n            <div className=\"container my-3\" style={{color: props.mode===\"dark\"?\"white\":\"#4f3174\"}}>\r\n                <h1 className=\"my-2\">Your Text Summary</h1>\r\n                <p className=\"my-2\">{text.split(\" \").length} Words and {text.length} Characters</p>\r\n                <p className=\"my-2\">Time To Read = {0.008 * text.split(\" \").length} Minutes</p>\r\n                <p className=\"my-2\">Time to Speak = {0.01 * text.split(\" \").length} Minutes</p>\r\n                <h2 className=\"my-2\">Text Preview</h2>\r\n                <p className=\"my-2\">{text.length>0?text:\"Enter text above to preview it here\"}</p>\r\n            </div>\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextForm;","import React, {useState} from \"react\";\nimport Alert from \"./components/Alert\";\nimport Navabr from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message,type)=> {\n    setalert({\n      msg : message,\n      type : type\n    })\n    setTimeout(()=>{\n      setalert(null);\n    },1500)\n  }\n  \n  const toggleMode = () => {\n    if(mode===\"light\"){\n      setmode(\"dark\");\n      document.body.style.backgroundColor = '#4f3174';\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Dark Mode\";\n      // setInterval(()=> {\n      //   document.title = \"Text Util is Amazing\";\n      // },1300)\n      // setInterval(()=> {\n      //   document.title = \"Text Util is Best\";\n      // },1800)\n    }\n    else\n    {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Light Mode\";\n    }\n  }\n\n  return (\n    // <Router>\n    <div className=\"App\">\n      <Navabr mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container\">\n      {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\"> */}\n            <TextForm alert={showAlert} heading=\"Enter Text to Analyze\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n      </div>\n    </div>\n    // </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}